@namespace BlazorTable
@typeparam TableItem



@if (Columns.Any())
{
    var columnCount = Columns.Count + (_detailTemplate != null ? 1 : 0);
    @if (!String.IsNullOrWhiteSpace(TableTitle) && ShowNewWorkflowButton)
    {
        <div style="display: flex; justify-content: space-between;">
            <div>
                <a href="javascript:void(0);" class="btn btn-primary change-view-btns dropdownContentLink dropdownContentLinkLarge rightContent" @onclick="NavigateToWorkflows">@NewWorkflowText</a>
            </div>
            <div style="background-color: transparent; display: flex; align-items: center; width: 33%;" id="globalSearch">
                <input type="text" class="form-control form-control-sm float-right" style="width:100%" @onfocusout="(async () => { await Task.Delay(100); SearchFocused = false; StateHasChanged(); })" @onfocusin="(() => { SearchFocused = true; StateHasChanged(); })" @bind="GlobalSearch" @bind:event="oninput" placeholder="Search..." />
                <span @onclick="(() => { GlobalSearch = string.Empty; Update(); })" style="position: absolute; right: 69px; cursor: pointer; @(SearchFocused ? "" : "display: none;")">X</span>
                <button style="position: absolute; display: flex; right: 0; height: 30px;" class="btn btn-primary"><i style="color: white;" class="fas fa-search"></i></button>
            </div>
        </div>
    }
    <div class="card" id="@TableId" style="background-color: white; box-shadow: 0px 3px 6px #00000029; opacity: 1; border-radius: 14px;">
        <div class="row">

            @if (!String.IsNullOrWhiteSpace(TableTitle))
            {
                @if (ShowChangePageSizeDropdown && ExtraContent != null)
                {
                    <div class="col-8" style="display: inline-flex; color: #B2B2B2; font-size:30px;">
                        @TableTitle
                    </div>

                    <div class="col-2" style="display: inline-flex;">
                        @ExtraContent
                    </div>

                    <div class="col-2" style="display: inline-flex;">
                        <span>Show&nbsp;</span>
                        <select @bind="PageSize" class="form-control form-control-sm">
                            @foreach (int pageSizeOption in PageSizeOptions)
                            {
                                <option>@pageSizeOption</option>
                            }
                            <option label="All" value="@(Items == null ? 0 : Items.Count())">All</option>
                        </select>
                        <span>&nbsp;entries</span>
                    </div>




                }
                else
                {
                    <div class="col-10" style="display: inline-flex; color: #B2B2B2; font-size:30px;">
                        @TableTitle
                    </div>
                    @if (ExtraContent != null)
                    {
                        <div class="col-2" style="display: inline-flex;">
                            @ExtraContent
                        </div>
                    }
                    @if (ShowChangePageSizeDropdown)
                    {
                        <div class="col-2" style="display: inline-flex;">
                            <span>Show&nbsp;</span>
                            <select @bind="PageSize" class="form-control form-control-sm">
                                @foreach (int pageSizeOption in PageSizeOptions)
                                {
                                    <option>@pageSizeOption</option>
                                }
                                <option label="All" value="@(Items == null ? 0 : Items.Count())">All</option>
                            </select>
                            <span>&nbsp;entries</span>
                        </div>
                    }

                }
            }
            else if (ShowChangePageSizeDropdown)
            {
                <div class="col-2" style="display: inline-flex;">
                    <span>Show&nbsp;</span>
                    <select @bind="PageSize" class="form-control form-control-sm">
                        @foreach (int pageSizeOption in PageSizeOptions)
                        {
                            <option>@pageSizeOption</option>
                        }
                        <option label="All" value="@(Items == null ? 0 : Items.Count())">All</option>
                    </select>
                    <span>&nbsp;entries</span>
                </div>


                @if (ShowSearchBar)
                {
                    <div class="col-10" id="globalSearch">
                        <input type="text" class="form-control form-control-sm float-right" style="width:33%" @onfocusout="(async () => { await Task.Delay(100); SearchFocused = false; StateHasChanged(); })" @onfocusin="(() => { SearchFocused = true; StateHasChanged(); })" @bind="GlobalSearch" @bind:event="oninput" placeholder="Search..." />
                        <span @onclick="(() => { GlobalSearch = string.Empty; Update(); })" style="position: absolute; right: 69px; top: 3px; cursor: pointer; @(SearchFocused ? "" : "display: none;")">X</span>
                        <button style="position: absolute; display: flex; right: 15px; top: 0; height: 30px;" class="btn btn-primary"><i style="color: white;" class="fas fa-search"></i></button>
                    </div>
                }
            }
            else
            {
                if (ShowSearchBar)
                {
                    <div class="col-12" id="globalSearch">
                        <input type="text" class="form-control form-control-sm float-right" style="width:33%" @onfocusout="(async () => { await Task.Delay(100); SearchFocused = false; StateHasChanged(); })" @onfocusin="(() => { SearchFocused = true; StateHasChanged(); })" @bind="GlobalSearch" @bind:event="oninput" placeholder="Search..." />
                        <span @onclick="(() => { GlobalSearch = string.Empty; Update(); })" style="position: absolute; right: 69px; top: 3px; cursor: pointer; @(SearchFocused ? "" : "display: none;")">X</span>
                        <button style="        position: absolute;
        display: flex;
        right: 15px;
        top: 0;
        height: 30px;" class="btn btn-primary">
                            <i style="color: white;" class="fas fa-search"></i>
                        </button>
                    </div>
                }
            }
        </div>


        <div class="dataTableWrapper table-responsive @WorkflowCSS">
            <table aria-readonly="@(IsEditMode ? "false" : "true")" role="grid" class="@TableClass" @attributes="UnknownParameters">


                <thead class="@TableHeadClass">
                    <tr style="cursor: pointer; ">
                        @if (_detailTemplate != null)
                        {
                            <th style="width: 1%"></th>
                        }
                        @foreach (IColumn<TableItem> column in Columns)
                        {
                            <th scope="col" style="@(!string.IsNullOrEmpty(column.Width) ? $"width:{column.Width};" : "") user-select: none"
                                @ondrop="@(() => HandleDrop(column))"
                                @ondragstart="@(() => HandleDragStart(column))"
                                ondragover="event.preventDefault();"
                                draggable="@(ColumnReorder.ToString())"
                                @key="column"
                                aria-sort="@column.AriaSort"
                                class="@(column.Class)">

                                <div @onclick="@(() => column.SortBy())">
                                    <span>@column.Title</span>

                                    @if (column.SortColumn)
                                    {
                                        if (column.SortDescending)
                                        {<i class="fas fa-sort-amount-down"></i>}
                                        else
                                        {<i class="fas fa-sort-amount-down-alt"></i>}
                                    }
                                    else
                                    {
                                        if (column.Sortable)
                                        {
                                            <span style="white-space:nowrap;">
                                                <i class="fas fa-long-arrow-alt-down" style="margin-right: -2px;"></i>
                                                <i class="fas fa-long-arrow-alt-up" style="margin-left: -2px;"></i>
                                            </span>
                                        }
                                    }

                                    @if (column.Filterable)
                                    {
                                        <div class="float-right" @onclick="@((x) => column.ToggleFilter())" @onclick:stopPropagation>
                                            <a href="javascript:;" @ref="column.FilterRef" aria-expanded="@(column.FilterOpen ? "true" : "false")" style="text-decoration: none" aria-label="@(column.Filter == null ? "unfiltered" : "filtered")">
                                                <span aria-hidden="true" style="@(column.Filter == null ? "opacity: 0.2;" : string.Empty)">
                                                    <img src="/_content/BlazorTable/images/filter.png" />
                                                </span>
                                            </a>
                                        </div>
                                        <CascadingValue Value="column" Name="Column">
                                            <Popover Reference="@column.FilterRef" IsOpen="@column.FilterOpen" Placement="Placement.Bottom" DismissOnNextClick="false">
                                                <h3 class="popover-header">Filter</h3>
                                                <div class="popover-body">
                                                    <FilterManager TableItem="TableItem">
                                                        <StringFilter TableItem="TableItem" />
                                                        <BooleanFilter TableItem="TableItem" />
                                                        <NumberFilter TableItem="TableItem" />
                                                        <DateFilter TableItem="TableItem" />
                                                        <EnumFilter TableItem="TableItem" />
                                                        @if (column.CustomIFilters != null)
                                                        {
                                                            @column.CustomIFilters(column)
                                                        }
                                                    </FilterManager>
                                                </div>
                                            </Popover>
                                        </CascadingValue>
                                    }
                                </div>
                            </th>
                        }
                    </tr>
                </thead>
                <tbody class="@TableBodyClass">
                    @if (FilteredItems != null)
                    {
                        if (FilteredItems.Any())
                        {
                            int i = 0;

                            foreach (TableItem item in FilteredItems)
                            {
                                <tr @key="item" aria-selected="@(SelectedItems.Contains(item) ? "true" : null)" class="testStripes @RowClass(item) @(SelectedItems.Contains(item) ? "table-active" : "")" @onclick="(() => OnRowClickHandler(item))">

                                    @{
                                        int locali = i;
                                        bool isOpen = detailsViewOpen.ContainsKey(locali) && detailsViewOpen[locali];
                                    }
                                    @if (_detailTemplate != null)
                                    {
                                        <td>
                                            <a href="javascript:;" style="text-decoration: none" @onclick="@(() => { detailsViewOpen[locali] = !isOpen; StateHasChanged(); })" title="Details View" aria-expanded="@(isOpen ? "true" : "false")">
                                                @if (isOpen)
                                                {<span aria-hidden="true"><img src="/_content/BlazorTable/images/minus.png" /></span>}
                                                else
                                                {<span aria-hidden="true"><img src="/_content/BlazorTable/images/plus.png" /></span>}
                                            </a>
                                        </td>
                                    }

                                    @foreach (IColumn<TableItem> column in Columns)
                                    {
                                        <td @key="column"
                                            style="@(column.Align > 0 ? $"text-align: {column.Align};" : "")"
                                            class="@(column.Class)">

                                            @if (IsEditMode && column.EditTemplate != null)
                                                @column.EditTemplate(item)
                                                else if (column.Template == null)
                                                    @column.Render(item)
                                                    else
                                                        @column.Template(item)
                                        </td>
                                    }
                                </tr>

                                if (_detailTemplate != null && isOpen)
                                {
                                    <tr>
                                        <td></td>
                                        <td colspan="@(Columns.Count)">
                                            @_detailTemplate(item)
                                        </td>
                                    </tr>
                                }

                                { i = locali + 1; }
                            }
                        }
                        else if (_emptyDataTemplate != null)
                        {
                            <tr>
                                <td colspan="@columnCount">
                                    @_emptyDataTemplate
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="@columnCount">
                                @if (_loadingDataTemplate != null)
                                {
                                    @_loadingDataTemplate
                                }
                                else
                                {
                                    <div class="text-center">
                                        Loading...
                                    </div>
                                }
                            </td>
                        </tr>
                    }
                </tbody>

                @if (ShowFooter)
                {
                    <tfoot class="@TableFooterClass">
                        <tr>
                            @foreach (IColumn<TableItem> column in Columns)
                            {
                                <td @key="column" style="@(column.Align > 0 ? $"text-align: {column.Align};" : "")" class="@(column.ColumnFooterClass)">
                                    @if (!string.IsNullOrEmpty(column.SetFooterValue))
                                    {
                                        @column.SetFooterValue
                                    }
                                    else if (FilteredItems != null && FilteredItems.Any())
                                    {
                                        @column.GetFooterValue()
                                    }
                                </td>
                            }
                        </tr>
                    </tfoot>
                }
            </table>

        </div>
        <CascadingValue Value="(ITable<TableItem>)this" Name="Table">
            @if (PagerInside)
            {
                <Pager />
            }
        </CascadingValue>
    </div>
}

<CascadingValue Value="(ITable<TableItem>)this" Name="Table">
    @ChildContent
</CascadingValue>